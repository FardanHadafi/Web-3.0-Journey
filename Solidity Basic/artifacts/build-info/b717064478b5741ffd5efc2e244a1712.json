{
	"id": "b717064478b5741ffd5efc2e244a1712",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Solidity Basic/Loops.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract Loops {\r\n    function whileLoop () public pure returns (uint) {\r\n        uint a;\r\n        uint b;\r\n\r\n        while (b < 10) {\r\n            a += b;\r\n            b++;\r\n        }\r\n        return a;\r\n    }\r\n\r\n    function forLoop () public pure returns (uint) {\r\n        uint c;\r\n        uint d;\r\n\r\n        for (d; d < 10; d++) {\r\n            c += d;\r\n        }\r\n        return c;\r\n    }\r\n\r\n    function doWhileLoop () public pure returns (uint) {\r\n        uint e;\r\n        uint f;\r\n\r\n        do {\r\n            e += f;\r\n            f++;\r\n        } while (f < 10);\r\n        return e;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Solidity Basic/Loops.sol": {
				"Loops": {
					"abi": [
						{
							"inputs": [],
							"name": "doWhileLoop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "forLoop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "whileLoop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Solidity Basic/Loops.sol\":59:656  contract Loops {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Solidity Basic/Loops.sol\":59:656  contract Loops {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x174c9c7e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe7c898ef\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfc0e6008\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Solidity Basic/Loops.sol\":459:653  function doWhileLoop () public pure returns (uint) {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Basic/Loops.sol\":81:269  function whileLoop () public pure returns (uint) {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Basic/Loops.sol\":277:451  function forLoop () public pure returns (uint) {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Basic/Loops.sol\":459:653  function doWhileLoop () public pure returns (uint) {... */\n    tag_7:\n        /* \"Solidity Basic/Loops.sol\":504:508  uint */\n      0x00\n        /* \"Solidity Basic/Loops.sol\":521:527  uint e */\n      dup1\n        /* \"Solidity Basic/Loops.sol\":538:544  uint f */\n      0x00\n        /* \"Solidity Basic/Loops.sol\":557:627  do {... */\n    tag_17:\n        /* \"Solidity Basic/Loops.sol\":580:581  f */\n      dup1\n        /* \"Solidity Basic/Loops.sol\":575:581  e += f */\n      dup3\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      swap2\n      pop\n        /* \"Solidity Basic/Loops.sol\":596:599  f++ */\n      dup1\n      dup1\n      tag_22\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      swap2\n      pop\n      pop\n        /* \"Solidity Basic/Loops.sol\":623:625  10 */\n      0x0a\n        /* \"Solidity Basic/Loops.sol\":619:620  f */\n      dup2\n        /* \"Solidity Basic/Loops.sol\":619:625  f < 10 */\n      lt\n        /* \"Solidity Basic/Loops.sol\":557:627  do {... */\n      tag_17\n      jumpi\n        /* \"Solidity Basic/Loops.sol\":644:645  e */\n      dup2\n        /* \"Solidity Basic/Loops.sol\":637:645  return e */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Solidity Basic/Loops.sol\":459:653  function doWhileLoop () public pure returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"Solidity Basic/Loops.sol\":81:269  function whileLoop () public pure returns (uint) {... */\n    tag_11:\n        /* \"Solidity Basic/Loops.sol\":124:128  uint */\n      0x00\n        /* \"Solidity Basic/Loops.sol\":141:147  uint a */\n      dup1\n        /* \"Solidity Basic/Loops.sol\":158:164  uint b */\n      0x00\n        /* \"Solidity Basic/Loops.sol\":177:243  while (b < 10) {... */\n    tag_25:\n        /* \"Solidity Basic/Loops.sol\":188:190  10 */\n      0x0a\n        /* \"Solidity Basic/Loops.sol\":184:185  b */\n      dup2\n        /* \"Solidity Basic/Loops.sol\":184:190  b < 10 */\n      lt\n        /* \"Solidity Basic/Loops.sol\":177:243  while (b < 10) {... */\n      iszero\n      tag_26\n      jumpi\n        /* \"Solidity Basic/Loops.sol\":212:213  b */\n      dup1\n        /* \"Solidity Basic/Loops.sol\":207:213  a += b */\n      dup3\n      tag_27\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_27:\n      swap2\n      pop\n        /* \"Solidity Basic/Loops.sol\":228:231  b++ */\n      dup1\n      dup1\n      tag_28\n      swap1\n      tag_23\n      jump\t// in\n    tag_28:\n      swap2\n      pop\n      pop\n        /* \"Solidity Basic/Loops.sol\":177:243  while (b < 10) {... */\n      jump(tag_25)\n    tag_26:\n        /* \"Solidity Basic/Loops.sol\":260:261  a */\n      dup2\n        /* \"Solidity Basic/Loops.sol\":253:261  return a */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Solidity Basic/Loops.sol\":81:269  function whileLoop () public pure returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"Solidity Basic/Loops.sol\":277:451  function forLoop () public pure returns (uint) {... */\n    tag_14:\n        /* \"Solidity Basic/Loops.sol\":318:322  uint */\n      0x00\n        /* \"Solidity Basic/Loops.sol\":335:341  uint c */\n      dup1\n        /* \"Solidity Basic/Loops.sol\":352:358  uint d */\n      0x00\n        /* \"Solidity Basic/Loops.sol\":371:425  for (d; d < 10; d++) {... */\n    tag_30:\n        /* \"Solidity Basic/Loops.sol\":383:385  10 */\n      0x0a\n        /* \"Solidity Basic/Loops.sol\":379:380  d */\n      dup2\n        /* \"Solidity Basic/Loops.sol\":379:385  d < 10 */\n      lt\n        /* \"Solidity Basic/Loops.sol\":371:425  for (d; d < 10; d++) {... */\n      iszero\n      tag_31\n      jumpi\n        /* \"Solidity Basic/Loops.sol\":412:413  d */\n      dup1\n        /* \"Solidity Basic/Loops.sol\":407:413  c += d */\n      dup3\n      tag_33\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_33:\n      swap2\n      pop\n        /* \"Solidity Basic/Loops.sol\":387:390  d++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"Solidity Basic/Loops.sol\":371:425  for (d; d < 10; d++) {... */\n      jump(tag_30)\n    tag_31:\n        /* \"Solidity Basic/Loops.sol\":442:443  c */\n      dup2\n        /* \"Solidity Basic/Loops.sol\":435:443  return c */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Solidity Basic/Loops.sol\":277:451  function forLoop () public pure returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_34:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_35:\n        /* \"#utility.yul\":177:201   */\n      tag_40\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_34\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_9:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_42\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_35\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:622   */\n    tag_36:\n        /* \"#utility.yul\":490:567   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":487:488   */\n      0x00\n        /* \"#utility.yul\":480:568   */\n      mstore\n        /* \"#utility.yul\":587:591   */\n      0x11\n        /* \"#utility.yul\":584:585   */\n      0x04\n        /* \"#utility.yul\":577:592   */\n      mstore\n        /* \"#utility.yul\":611:615   */\n      0x24\n        /* \"#utility.yul\":608:609   */\n      0x00\n        /* \"#utility.yul\":601:616   */\n      revert\n        /* \"#utility.yul\":628:819   */\n    tag_21:\n        /* \"#utility.yul\":668:671   */\n      0x00\n        /* \"#utility.yul\":687:707   */\n      tag_45\n        /* \"#utility.yul\":705:706   */\n      dup3\n        /* \"#utility.yul\":687:707   */\n      tag_34\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":682:707   */\n      swap2\n      pop\n        /* \"#utility.yul\":721:741   */\n      tag_46\n        /* \"#utility.yul\":739:740   */\n      dup4\n        /* \"#utility.yul\":721:741   */\n      tag_34\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":716:741   */\n      swap3\n      pop\n        /* \"#utility.yul\":764:765   */\n      dup3\n        /* \"#utility.yul\":761:762   */\n      dup3\n        /* \"#utility.yul\":757:766   */\n      add\n        /* \"#utility.yul\":750:766   */\n      swap1\n      pop\n        /* \"#utility.yul\":785:788   */\n      dup1\n        /* \"#utility.yul\":782:783   */\n      dup3\n        /* \"#utility.yul\":779:789   */\n      gt\n        /* \"#utility.yul\":776:812   */\n      iszero\n      tag_47\n      jumpi\n        /* \"#utility.yul\":792:810   */\n      tag_48\n      tag_36\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":776:812   */\n    tag_47:\n        /* \"#utility.yul\":628:819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":825:1058   */\n    tag_23:\n        /* \"#utility.yul\":864:867   */\n      0x00\n        /* \"#utility.yul\":887:911   */\n      tag_50\n        /* \"#utility.yul\":905:910   */\n      dup3\n        /* \"#utility.yul\":887:911   */\n      tag_34\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":878:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":933:999   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":926:931   */\n      dup3\n        /* \"#utility.yul\":923:1000   */\n      sub\n        /* \"#utility.yul\":920:1023   */\n      tag_51\n      jumpi\n        /* \"#utility.yul\":1003:1021   */\n      tag_52\n      tag_36\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":920:1023   */\n    tag_51:\n        /* \"#utility.yul\":1050:1051   */\n      0x01\n        /* \"#utility.yul\":1043:1048   */\n      dup3\n        /* \"#utility.yul\":1039:1052   */\n      add\n        /* \"#utility.yul\":1032:1052   */\n      swap1\n      pop\n        /* \"#utility.yul\":825:1058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202f40d3d22fc37cc6b1156a86363b063eab740cc3eeebf2bfcb76c4a950432ba864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506102418061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063174c9c7e14610043578063e7c898ef14610061578063fc0e60081461007f575b5f80fd5b61004b61009d565b604051610058919061014b565b60405180910390f35b6100696100cd565b604051610076919061014b565b60405180910390f35b610087610103565b604051610094919061014b565b60405180910390f35b5f805f5b80826100ad9190610191565b915080806100ba906101c4565b915050600a81106100a157819250505090565b5f805f5b600a8110156100fb5780826100e69190610191565b915080806100f3906101c4565b9150506100d1565b819250505090565b5f805f5b600a81101561012b57808261011c9190610191565b91508080600101915050610107565b819250505090565b5f819050919050565b61014581610133565b82525050565b5f60208201905061015e5f83018461013c565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61019b82610133565b91506101a683610133565b92508282019050808211156101be576101bd610164565b5b92915050565b5f6101ce82610133565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610200576101ff610164565b5b60018201905091905056fea26469706673582212202f40d3d22fc37cc6b1156a86363b063eab740cc3eeebf2bfcb76c4a950432ba864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x174C9C7E EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xE7C898EF EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xFC0E6008 EQ PUSH2 0x7F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x87 PUSH2 0x103 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 JUMPDEST DUP1 DUP3 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x191 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xBA SWAP1 PUSH2 0x1C4 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP2 LT PUSH2 0xA1 JUMPI DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xFB JUMPI DUP1 DUP3 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x191 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xF3 SWAP1 PUSH2 0x1C4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD1 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x12B JUMPI DUP1 DUP3 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x191 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x107 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145 DUP2 PUSH2 0x133 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15E PUSH0 DUP4 ADD DUP5 PUSH2 0x13C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19B DUP3 PUSH2 0x133 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6 DUP4 PUSH2 0x133 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BE JUMPI PUSH2 0x1BD PUSH2 0x164 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CE DUP3 PUSH2 0x133 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x200 JUMPI PUSH2 0x1FF PUSH2 0x164 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F BLOCKHASH 0xD3 0xD2 0x2F 0xC3 PUSH29 0xC6B1156A86363B063EAB740CC3EEEBF2BFCB76C4A950432BA864736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "59:597:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@doWhileLoop_81": {
									"entryPoint": 157,
									"id": 81,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@forLoop_55": {
									"entryPoint": 259,
									"id": 55,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@whileLoop_27": {
									"entryPoint": 205,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 356,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1061:1",
										"nodeType": "YulBlock",
										"src": "0:1061:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nativeSrc": "470:152:1",
													"nodeType": "YulBlock",
													"src": "470:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "487:1:1",
																		"nodeType": "YulLiteral",
																		"src": "487:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "490:77:1",
																		"nodeType": "YulLiteral",
																		"src": "490:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "480:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:1"
																},
																"nativeSrc": "480:88:1",
																"nodeType": "YulFunctionCall",
																"src": "480:88:1"
															},
															"nativeSrc": "480:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "480:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "584:1:1",
																		"nodeType": "YulLiteral",
																		"src": "584:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "587:4:1",
																		"nodeType": "YulLiteral",
																		"src": "587:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "577:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "577:6:1"
																},
																"nativeSrc": "577:15:1",
																"nodeType": "YulFunctionCall",
																"src": "577:15:1"
															},
															"nativeSrc": "577:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "577:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "608:1:1",
																		"nodeType": "YulLiteral",
																		"src": "608:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "611:4:1",
																		"nodeType": "YulLiteral",
																		"src": "611:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "601:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:1"
																},
																"nativeSrc": "601:15:1",
																"nodeType": "YulFunctionCall",
																"src": "601:15:1"
															},
															"nativeSrc": "601:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "601:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "442:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "442:180:1"
											},
											{
												"body": {
													"nativeSrc": "672:147:1",
													"nodeType": "YulBlock",
													"src": "672:147:1",
													"statements": [
														{
															"nativeSrc": "682:25:1",
															"nodeType": "YulAssignment",
															"src": "682:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "705:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "705:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "687:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "687:17:1"
																},
																"nativeSrc": "687:20:1",
																"nodeType": "YulFunctionCall",
																"src": "687:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "682:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "682:1:1"
																}
															]
														},
														{
															"nativeSrc": "716:25:1",
															"nodeType": "YulAssignment",
															"src": "716:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "739:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "739:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "721:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "721:17:1"
																},
																"nativeSrc": "721:20:1",
																"nodeType": "YulFunctionCall",
																"src": "721:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "716:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "716:1:1"
																}
															]
														},
														{
															"nativeSrc": "750:16:1",
															"nodeType": "YulAssignment",
															"src": "750:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "761:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "761:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "764:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "764:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "757:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "757:3:1"
																},
																"nativeSrc": "757:9:1",
																"nodeType": "YulFunctionCall",
																"src": "757:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "750:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "750:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "790:22:1",
																"nodeType": "YulBlock",
																"src": "790:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "792:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "792:16:1"
																			},
																			"nativeSrc": "792:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "792:18:1"
																		},
																		"nativeSrc": "792:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "792:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "782:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "782:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "785:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "785:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "779:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "779:2:1"
																},
																"nativeSrc": "779:10:1",
																"nodeType": "YulFunctionCall",
																"src": "779:10:1"
															},
															"nativeSrc": "776:36:1",
															"nodeType": "YulIf",
															"src": "776:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "628:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "659:1:1",
														"nodeType": "YulTypedName",
														"src": "659:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "662:1:1",
														"nodeType": "YulTypedName",
														"src": "662:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "668:3:1",
														"nodeType": "YulTypedName",
														"src": "668:3:1",
														"type": ""
													}
												],
												"src": "628:191:1"
											},
											{
												"body": {
													"nativeSrc": "868:190:1",
													"nodeType": "YulBlock",
													"src": "868:190:1",
													"statements": [
														{
															"nativeSrc": "878:33:1",
															"nodeType": "YulAssignment",
															"src": "878:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "905:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "905:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "887:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "887:17:1"
																},
																"nativeSrc": "887:24:1",
																"nodeType": "YulFunctionCall",
																"src": "887:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "878:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1001:22:1",
																"nodeType": "YulBlock",
																"src": "1001:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1003:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1003:16:1"
																			},
																			"nativeSrc": "1003:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1003:18:1"
																		},
																		"nativeSrc": "1003:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1003:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "926:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "926:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "933:66:1",
																		"nodeType": "YulLiteral",
																		"src": "933:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "923:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "923:2:1"
																},
																"nativeSrc": "923:77:1",
																"nodeType": "YulFunctionCall",
																"src": "923:77:1"
															},
															"nativeSrc": "920:103:1",
															"nodeType": "YulIf",
															"src": "920:103:1"
														},
														{
															"nativeSrc": "1032:20:1",
															"nodeType": "YulAssignment",
															"src": "1032:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1043:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1043:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1050:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1050:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1039:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1039:3:1"
																},
																"nativeSrc": "1039:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1039:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1032:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1032:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "825:233:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "854:5:1",
														"nodeType": "YulTypedName",
														"src": "854:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "864:3:1",
														"nodeType": "YulTypedName",
														"src": "864:3:1",
														"type": ""
													}
												],
												"src": "825:233:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063174c9c7e14610043578063e7c898ef14610061578063fc0e60081461007f575b5f80fd5b61004b61009d565b604051610058919061014b565b60405180910390f35b6100696100cd565b604051610076919061014b565b60405180910390f35b610087610103565b604051610094919061014b565b60405180910390f35b5f805f5b80826100ad9190610191565b915080806100ba906101c4565b915050600a81106100a157819250505090565b5f805f5b600a8110156100fb5780826100e69190610191565b915080806100f3906101c4565b9150506100d1565b819250505090565b5f805f5b600a81101561012b57808261011c9190610191565b91508080600101915050610107565b819250505090565b5f819050919050565b61014581610133565b82525050565b5f60208201905061015e5f83018461013c565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61019b82610133565b91506101a683610133565b92508282019050808211156101be576101bd610164565b5b92915050565b5f6101ce82610133565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610200576101ff610164565b5b60018201905091905056fea26469706673582212202f40d3d22fc37cc6b1156a86363b063eab740cc3eeebf2bfcb76c4a950432ba864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x174C9C7E EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xE7C898EF EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xFC0E6008 EQ PUSH2 0x7F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x87 PUSH2 0x103 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 JUMPDEST DUP1 DUP3 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x191 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xBA SWAP1 PUSH2 0x1C4 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP2 LT PUSH2 0xA1 JUMPI DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xFB JUMPI DUP1 DUP3 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x191 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xF3 SWAP1 PUSH2 0x1C4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD1 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x12B JUMPI DUP1 DUP3 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x191 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x107 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145 DUP2 PUSH2 0x133 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15E PUSH0 DUP4 ADD DUP5 PUSH2 0x13C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19B DUP3 PUSH2 0x133 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6 DUP4 PUSH2 0x133 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BE JUMPI PUSH2 0x1BD PUSH2 0x164 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CE DUP3 PUSH2 0x133 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x200 JUMPI PUSH2 0x1FF PUSH2 0x164 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F BLOCKHASH 0xD3 0xD2 0x2F 0xC3 PUSH29 0xC6B1156A86363B063EAB740CC3EEEBF2BFCB76C4A950432BA864736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "59:597:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;459:194;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;81:188;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;277:174;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;459:194;504:4;521:6;538;557:70;580:1;575:6;;;;;:::i;:::-;;;596:3;;;;;:::i;:::-;;;;623:2;619:1;:6;557:70;;644:1;637:8;;;;459:194;:::o;81:188::-;124:4;141:6;158;177:66;188:2;184:1;:6;177:66;;;212:1;207:6;;;;;:::i;:::-;;;228:3;;;;;:::i;:::-;;;;177:66;;;260:1;253:8;;;;81:188;:::o;277:174::-;318:4;335:6;352;371:54;383:2;379:1;:6;371:54;;;412:1;407:6;;;;;:::i;:::-;;;387:3;;;;;;;371:54;;;442:1;435:8;;;;277:174;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:180::-;490:77;487:1;480:88;587:4;584:1;577:15;611:4;608:1;601:15;628:191;668:3;687:20;705:1;687:20;:::i;:::-;682:25;;721:20;739:1;721:20;:::i;:::-;716:25;;764:1;761;757:9;750:16;;785:3;782:1;779:10;776:36;;;792:18;;:::i;:::-;776:36;628:191;;;;:::o;825:233::-;864:3;887:24;905:5;887:24;:::i;:::-;878:33;;933:66;926:5;923:77;920:103;;1003:18;;:::i;:::-;920:103;1050:1;1043:5;1039:13;1032:20;;825:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "115400",
								"executionCost": "163",
								"totalCost": "115563"
							},
							"external": {
								"doWhileLoop()": "infinite",
								"forLoop()": "infinite",
								"whileLoop()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59,
									"end": 656,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 59,
									"end": 656,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 59,
									"end": 656,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 59,
									"end": 656,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 59,
									"end": 656,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 656,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 59,
									"end": 656,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 656,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 59,
									"end": 656,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 656,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 656,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 59,
									"end": 656,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 656,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59,
									"end": 656,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 59,
									"end": 656,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 656,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 656,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 656,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 656,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 59,
									"end": 656,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 656,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f40d3d22fc37cc6b1156a86363b063eab740cc3eeebf2bfcb76c4a950432ba864736f6c634300081a0033",
									".code": [
										{
											"begin": 59,
											"end": 656,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59,
											"end": 656,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59,
											"end": 656,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59,
											"end": 656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59,
											"end": 656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59,
											"end": 656,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59,
											"end": 656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 656,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 59,
											"end": 656,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "PUSH",
											"source": 0,
											"value": "174C9C7E"
										},
										{
											"begin": 59,
											"end": 656,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 59,
											"end": 656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "PUSH",
											"source": 0,
											"value": "E7C898EF"
										},
										{
											"begin": 59,
											"end": 656,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59,
											"end": 656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "PUSH",
											"source": 0,
											"value": "FC0E6008"
										},
										{
											"begin": 59,
											"end": 656,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59,
											"end": 656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59,
											"end": 656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 656,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 459,
											"end": 653,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 459,
											"end": 653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 459,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 459,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 459,
											"end": 653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 459,
											"end": 653,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 459,
											"end": 653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 459,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 459,
											"end": 653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 459,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 459,
											"end": 653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 459,
											"end": 653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 459,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 459,
											"end": 653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 459,
											"end": 653,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 459,
											"end": 653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 459,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 459,
											"end": 653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 459,
											"end": 653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 459,
											"end": 653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 459,
											"end": 653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 459,
											"end": 653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 459,
											"end": 653,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 81,
											"end": 269,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81,
											"end": 269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 81,
											"end": 269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 81,
											"end": 269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 269,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 81,
											"end": 269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81,
											"end": 269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81,
											"end": 269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 81,
											"end": 269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 81,
											"end": 269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 269,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 81,
											"end": 269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81,
											"end": 269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81,
											"end": 269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 81,
											"end": 269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 269,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 277,
											"end": 451,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 277,
											"end": 451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 277,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 277,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 277,
											"end": 451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 277,
											"end": 451,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 277,
											"end": 451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 277,
											"end": 451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 277,
											"end": 451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 277,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 277,
											"end": 451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 277,
											"end": 451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 277,
											"end": 451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 277,
											"end": 451,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 277,
											"end": 451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 277,
											"end": 451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 277,
											"end": 451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 277,
											"end": 451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 277,
											"end": 451,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 277,
											"end": 451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 451,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 459,
											"end": 653,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 459,
											"end": 653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 504,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 627,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 557,
											"end": 627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 580,
											"end": 581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 581,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 575,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 575,
											"end": 581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 575,
											"end": 581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 575,
											"end": 581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 575,
											"end": 581,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 575,
											"end": 581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 575,
											"end": 581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 575,
											"end": 581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 596,
											"end": 599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 596,
											"end": 599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 596,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 596,
											"end": 599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 596,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 596,
											"end": 599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 596,
											"end": 599,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 596,
											"end": 599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 596,
											"end": 599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 596,
											"end": 599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 596,
											"end": 599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 623,
											"end": 625,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 619,
											"end": 620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 619,
											"end": 625,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 557,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 557,
											"end": 627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 644,
											"end": 645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 637,
											"end": 645,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 637,
											"end": 645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 459,
											"end": 653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 459,
											"end": 653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 269,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 81,
											"end": 269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 124,
											"end": 128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 141,
											"end": 147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 158,
											"end": 164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 243,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 177,
											"end": 243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 188,
											"end": 190,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 184,
											"end": 185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 184,
											"end": 190,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 243,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 177,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 177,
											"end": 243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 207,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 207,
											"end": 213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 207,
											"end": 213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 207,
											"end": 213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 207,
											"end": 213,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 207,
											"end": 213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 207,
											"end": 213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 207,
											"end": 213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 228,
											"end": 231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 228,
											"end": 231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 228,
											"end": 231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 228,
											"end": 231,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 228,
											"end": 231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 228,
											"end": 231,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 228,
											"end": 231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 228,
											"end": 231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 177,
											"end": 243,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 243,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 177,
											"end": 243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 260,
											"end": 261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 253,
											"end": 261,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 253,
											"end": 261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 253,
											"end": 261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 253,
											"end": 261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 277,
											"end": 451,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 277,
											"end": 451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 318,
											"end": 322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 352,
											"end": 358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 425,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 371,
											"end": 425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 383,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 379,
											"end": 380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 379,
											"end": 385,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 371,
											"end": 425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 371,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 371,
											"end": 425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 407,
											"end": 413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 407,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 407,
											"end": 413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 407,
											"end": 413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 407,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 407,
											"end": 413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 407,
											"end": 413,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 407,
											"end": 413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 407,
											"end": 413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 407,
											"end": 413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 387,
											"end": 390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 387,
											"end": 390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 387,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 387,
											"end": 390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 387,
											"end": 390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 387,
											"end": 390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 387,
											"end": 390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 371,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 371,
											"end": 425,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 371,
											"end": 425,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 371,
											"end": 425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 435,
											"end": 443,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 435,
											"end": 443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 435,
											"end": 443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 435,
											"end": 443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 277,
											"end": 451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 622,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 442,
											"end": 622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 587,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 611,
											"end": 615,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 608,
											"end": 609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 616,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 819,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 628,
											"end": 819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 668,
											"end": 671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 705,
											"end": 706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 687,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 687,
											"end": 707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 687,
											"end": 707,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 682,
											"end": 707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 682,
											"end": 707,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 739,
											"end": 740,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 721,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 721,
											"end": 741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 741,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 716,
											"end": 741,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 716,
											"end": 741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 764,
											"end": 765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 761,
											"end": 762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 757,
											"end": 766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 750,
											"end": 766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 750,
											"end": 766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 785,
											"end": 788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 782,
											"end": 783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 779,
											"end": 789,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 792,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 792,
											"end": 810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 792,
											"end": 810,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 819,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 628,
											"end": 819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 628,
											"end": 819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 825,
											"end": 1058,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 825,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 864,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 887,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 887,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 887,
											"end": 911,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 887,
											"end": 911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 878,
											"end": 911,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 878,
											"end": 911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 933,
											"end": 999,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 926,
											"end": 931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1000,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 920,
											"end": 1023,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1003,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1023,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 920,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 825,
											"end": 1058,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 825,
											"end": 1058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 825,
											"end": 1058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 825,
											"end": 1058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Solidity Basic/Loops.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"doWhileLoop()": "174c9c7e",
							"forLoop()": "fc0e6008",
							"whileLoop()": "e7c898ef"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"doWhileLoop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forLoop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whileLoop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Solidity Basic/Loops.sol\":\"Loops\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Solidity Basic/Loops.sol\":{\"keccak256\":\"0x70a885cedbf4de1b0fb46362baec05e81b8b076c42394b4e01ed56cd501ef042\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c14ab9ac44afd0a4f368ae397bf9218632d96bfd2fab22422ca4207abad0044\",\"dweb:/ipfs/QmQAJCjZCsydthxEYRy6SvnCro5ugUQQEFxnPaMUB3Q7qQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Solidity Basic/Loops.sol": {
				"ast": {
					"absolutePath": "Solidity Basic/Loops.sol",
					"exportedSymbols": {
						"Loops": [
							82
						]
					},
					"id": 83,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Loops",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 82,
							"linearizedBaseContracts": [
								82
							],
							"name": "Loops",
							"nameLocation": "68:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "130:139:0",
										"statements": [
											{
												"assignments": [
													7
												],
												"declarations": [
													{
														"constant": false,
														"id": 7,
														"mutability": "mutable",
														"name": "a",
														"nameLocation": "146:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 26,
														"src": "141:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 6,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "141:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 8,
												"nodeType": "VariableDeclarationStatement",
												"src": "141:6:0"
											},
											{
												"assignments": [
													10
												],
												"declarations": [
													{
														"constant": false,
														"id": 10,
														"mutability": "mutable",
														"name": "b",
														"nameLocation": "163:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 26,
														"src": "158:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 9,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "158:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 11,
												"nodeType": "VariableDeclarationStatement",
												"src": "158:6:0"
											},
											{
												"body": {
													"id": 22,
													"nodeType": "Block",
													"src": "192:51:0",
													"statements": [
														{
															"expression": {
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 15,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "207:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 16,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "212:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "207:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 18,
															"nodeType": "ExpressionStatement",
															"src": "207:6:0"
														},
														{
															"expression": {
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "228:3:0",
																"subExpression": {
																	"id": 19,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "228:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 21,
															"nodeType": "ExpressionStatement",
															"src": "228:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 12,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "184:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "188:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "184:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 23,
												"nodeType": "WhileStatement",
												"src": "177:66:0"
											},
											{
												"expression": {
													"id": 24,
													"name": "a",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "260:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5,
												"id": 25,
												"nodeType": "Return",
												"src": "253:8:0"
											}
										]
									},
									"functionSelector": "e7c898ef",
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "whileLoop",
									"nameLocation": "90:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "100:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "124:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "124:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "123:6:0"
									},
									"scope": 82,
									"src": "81:188:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "324:127:0",
										"statements": [
											{
												"assignments": [
													33
												],
												"declarations": [
													{
														"constant": false,
														"id": 33,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "340:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 54,
														"src": "335:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 32,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "335:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 34,
												"nodeType": "VariableDeclarationStatement",
												"src": "335:6:0"
											},
											{
												"assignments": [
													36
												],
												"declarations": [
													{
														"constant": false,
														"id": 36,
														"mutability": "mutable",
														"name": "d",
														"nameLocation": "357:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 54,
														"src": "352:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 35,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "352:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 37,
												"nodeType": "VariableDeclarationStatement",
												"src": "352:6:0"
											},
											{
												"body": {
													"id": 50,
													"nodeType": "Block",
													"src": "392:33:0",
													"statements": [
														{
															"expression": {
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 46,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "407:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 47,
																	"name": "d",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "412:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "407:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 49,
															"nodeType": "ExpressionStatement",
															"src": "407:6:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 40,
														"name": "d",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "379:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "383:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "379:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 51,
												"initializationExpression": {
													"expression": {
														"id": 38,
														"name": "d",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "376:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 39,
													"nodeType": "ExpressionStatement",
													"src": "376:1:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "387:3:0",
														"subExpression": {
															"id": 43,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "387:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 45,
													"nodeType": "ExpressionStatement",
													"src": "387:3:0"
												},
												"nodeType": "ForStatement",
												"src": "371:54:0"
											},
											{
												"expression": {
													"id": 52,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 33,
													"src": "442:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 31,
												"id": 53,
												"nodeType": "Return",
												"src": "435:8:0"
											}
										]
									},
									"functionSelector": "fc0e6008",
									"id": 55,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forLoop",
									"nameLocation": "286:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "318:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "318:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "317:6:0"
									},
									"scope": 82,
									"src": "277:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "510:143:0",
										"statements": [
											{
												"assignments": [
													61
												],
												"declarations": [
													{
														"constant": false,
														"id": 61,
														"mutability": "mutable",
														"name": "e",
														"nameLocation": "526:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 80,
														"src": "521:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 60,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "521:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 62,
												"nodeType": "VariableDeclarationStatement",
												"src": "521:6:0"
											},
											{
												"assignments": [
													64
												],
												"declarations": [
													{
														"constant": false,
														"id": 64,
														"mutability": "mutable",
														"name": "f",
														"nameLocation": "543:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 80,
														"src": "538:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 63,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "538:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 65,
												"nodeType": "VariableDeclarationStatement",
												"src": "538:6:0"
											},
											{
												"body": {
													"id": 73,
													"nodeType": "Block",
													"src": "560:51:0",
													"statements": [
														{
															"expression": {
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 66,
																	"name": "e",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "575:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 67,
																	"name": "f",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "580:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "575:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 69,
															"nodeType": "ExpressionStatement",
															"src": "575:6:0"
														},
														{
															"expression": {
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "596:3:0",
																"subExpression": {
																	"id": 70,
																	"name": "f",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "596:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 72,
															"nodeType": "ExpressionStatement",
															"src": "596:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 74,
														"name": "f",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "619:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "623:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "619:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 77,
												"nodeType": "DoWhileStatement",
												"src": "557:70:0"
											},
											{
												"expression": {
													"id": 78,
													"name": "e",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 61,
													"src": "644:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 59,
												"id": 79,
												"nodeType": "Return",
												"src": "637:8:0"
											}
										]
									},
									"functionSelector": "174c9c7e",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "doWhileLoop",
									"nameLocation": "468:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "480:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "504:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "504:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:6:0"
									},
									"scope": 82,
									"src": "459:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 83,
							"src": "59:597:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:624:0"
				},
				"id": 0
			}
		}
	}
}